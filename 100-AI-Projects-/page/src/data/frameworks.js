import { t } from 'tradux'

export const frameworks = [
	{
		name: 'React',
		color: '#61dafb',
		icon: `<svg width="24" height="24" fill="currentColor" viewBox="0 0 24 24"><path d="M21.718 12c0-1.429-1.339-2.681-3.467-3.5.029-.18.077-.37.1-.545.217-2.058-.273-3.543-1.379-4.182-1.235-.714-2.983-.186-4.751 1.239C10.45 3.589 8.7 3.061 7.468 3.773c-1.107.639-1.6 2.124-1.379 4.182.018.175.067.365.095.545-2.127.819-3.466 2.071-3.466 3.5 0 1.429 1.339 2.681 3.466 3.5-.028.18-.077.37-.095.545-.218 2.058.272 3.543 1.379 4.182.376.213.803.322 1.235.316a5.987 5.987 0 0 0 3.514-1.56 5.992 5.992 0 0 0 3.515 1.56 2.44 2.44 0 0 0 1.236-.316c1.106-.639 1.6-2.124 1.379-4.182-.019-.175-.067-.365-.1-.545 2.132-.819 3.471-2.071 3.471-3.5Zm-6.01-7.548a1.5 1.5 0 0 1 .76.187c.733.424 1.055 1.593.884 3.212-.012.106-.043.222-.058.33-.841-.243-1.7-.418-2.57-.523a16.165 16.165 0 0 0-1.747-1.972 4.9 4.9 0 0 1 2.731-1.234Zm-7.917 8.781c.172.34.335.68.529 1.017.194.337.395.656.6.969a14.09 14.09 0 0 1-1.607-.376 14.38 14.38 0 0 1 .478-1.61Zm-.479-4.076a14.085 14.085 0 0 1 1.607-.376c-.205.313-.405.634-.6.969-.195.335-.357.677-.529 1.017-.19-.527-.35-1.064-.478-1.61ZM8.3 12a19.32 19.32 0 0 1 .888-1.75c.33-.568.69-1.118 1.076-1.65.619-.061 1.27-.1 1.954-.1.684 0 1.333.035 1.952.1a19.63 19.63 0 0 1 1.079 1.654c.325.567.621 1.15.887 1.746a18.869 18.869 0 0 1-1.953 3.403 19.218 19.218 0 0 1-3.931 0 20.169 20.169 0 0 1-1.066-1.653A19.324 19.324 0 0 1 8.3 12Zm7.816 2.25c.2-.337.358-.677.53-1.017.191.527.35 1.065.478 1.611a14.48 14.48 0 0 1-1.607.376c.202-.314.404-.635.597-.97h.002Zm.53-3.483c-.172-.34-.335-.68-.53-1.017a20.214 20.214 0 0 0-.6-.97c.542.095 1.078.22 1.606.376a14.111 14.111 0 0 1-.478 1.611h.002ZM12.217 6.34c.4.375.777.773 1.13 1.193-.37-.02-.746-.033-1.129-.033s-.76.013-1.131.033c.353-.42.73-.817 1.13-1.193Zm-4.249-1.7a1.5 1.5 0 0 1 .76-.187 4.9 4.9 0 0 1 2.729 1.233A16.253 16.253 0 0 0 9.71 7.658c-.87.105-1.728.28-2.569.524-.015-.109-.047-.225-.058-.331-.171-1.619.151-2.787.885-3.211ZM3.718 12c0-.9.974-1.83 2.645-2.506.218.857.504 1.695.856 2.506-.352.811-.638 1.65-.856 2.506C4.692 13.83 3.718 12.9 3.718 12Zm4.25 7.361c-.734-.423-1.056-1.593-.885-3.212.011-.106.043-.222.058-.331.84.243 1.697.418 2.564.524a16.37 16.37 0 0 0 1.757 1.982c-1.421 1.109-2.714 1.488-3.494 1.037Zm3.11-2.895c.374.021.753.034 1.14.034.387 0 .765-.013 1.139-.034a14.4 14.4 0 0 1-1.14 1.215 14.248 14.248 0 0 1-1.139-1.215Zm5.39 2.895c-.782.451-2.075.072-3.5-1.038a16.248 16.248 0 0 0 1.757-1.981 16.41 16.41 0 0 0 2.565-.523c.015.108.046.224.058.33.175 1.619-.148 2.789-.88 3.212Zm1.6-4.854A16.563 16.563 0 0 0 17.216 12c.352-.812.638-1.65.856-2.507 1.671.677 2.646 1.607 2.646 2.507 0 .9-.975 1.83-2.646 2.507h-.004Z"/><path d="M12.215 13.773a1.792 1.792 0 1 0-1.786-1.8v.006a1.787 1.787 0 0 0 1.786 1.794Z"/></svg>`,
		setup: `npm install tradux`,
		usage: `
import { t, setLanguage, getAvailableLanguages, getCurrentLanguage } 
from "tradux"

const currentLang = await getCurrentLanguage();

export default App() {
	const changeLanguage = async (e) => {
		await setLanguage(e.target.value);
		location.reload();
	};

	return (
		<div>
			<h1>React</h1>
			<h2>{t.welcome}</h2>
			<p>{t.navigation.home}</p>
			<p>{t.navigation.about}</p>
			<p>{t.navigation.services}</p>

			<select value={currentLang} onChange={changeLanguage}>
				{getAvailableLanguages().map(({ name, value }) => (
					<option key={value} value={value}>
						{name}
					</option>
				))}
			</select>
		</div>
	);
}
    `
	},
	{
		name: 'Vue',
		color: '#42b883',
		icon: `<svg width="24" height="24" viewBox="0 0 24 24"><path d="M14.5 3 12 7.156 9.857 3H2l10 18L22 3h-7.5ZM4.486 4.5h2.4L12 13.8l5.107-9.3h2.4L12 18.021 4.486 4.5Z"/></svg>`,
		setup: `npm install tradux`,
		usage: `
<script setup>
  import { ref, onMounted } from 'vue'
  import { t, setLanguage, getAvailableLanguages, getCurrentLanguage } 
  from "tradux"

  const selectedLanguage = ref('')

  onMounted(async () => {
    selectedLanguage.value = await getCurrentLanguage()
  })

  const changeLanguage = async (e) => {
    const newLang = e.target.value
    if (await setLanguage(newLang)) {
      selectedLanguage.value = newLang
      window.location.reload()
    }
  }
</script>

<template>
  <h1>Vue</h1>
  <h2>{{ t.welcome }}</h2>
  <p>{{ t.navigation.home }}</p>
  <p>{{ t.navigation.about }}</p>
  <p>{{ t.navigation.services }}</p>
  <select v-model="selectedLanguage" @change="changeLanguage">
    <option v-for="lang in getAvailableLanguages()" :key="lang.value" :value="lang.value">
      {{ lang.name }}
    </option>
  </select>
</template>
`
	},
	{
		name: 'Svelte',
		color: '#ff3e00',
		icon: `<svg viewBox="0 0 32 32" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
    <g id="SVGRepo_iconCarrier">
        <title>file_type_svelte</title>
        <path
            d="M26.47,5.7A8.973,8.973,0,0,0,14.677,3.246L7.96,7.4a7.461,7.461,0,0,0-3.481,5.009,7.686,7.686,0,0,0,.8,5.058,7.358,7.358,0,0,0-1.151,2.8,7.789,7.789,0,0,0,1.4,6.028,8.977,8.977,0,0,0,11.794,2.458L24.04,24.6a7.468,7.468,0,0,0,3.481-5.009,7.673,7.673,0,0,0-.8-5.062,7.348,7.348,0,0,0,1.152-2.8A7.785,7.785,0,0,0,26.47,5.7"
            style="currentColor"></path>
        <path
            d="M14.022,26.64A5.413,5.413,0,0,1,8.3,24.581a4.678,4.678,0,0,1-.848-3.625,4.307,4.307,0,0,1,.159-.61l.127-.375.344.238a8.76,8.76,0,0,0,2.628,1.274l.245.073-.025.237a1.441,1.441,0,0,0,.271.968,1.63,1.63,0,0,0,1.743.636,1.512,1.512,0,0,0,.411-.175l6.7-4.154a1.366,1.366,0,0,0,.633-.909,1.407,1.407,0,0,0-.244-1.091,1.634,1.634,0,0,0-1.726-.622,1.509,1.509,0,0,0-.413.176l-2.572,1.584a4.934,4.934,0,0,1-1.364.582,5.415,5.415,0,0,1-5.727-2.06A4.678,4.678,0,0,1,7.811,13.1,4.507,4.507,0,0,1,9.9,10.09l6.708-4.154a4.932,4.932,0,0,1,1.364-.581A5.413,5.413,0,0,1,23.7,7.414a4.679,4.679,0,0,1,.848,3.625,4.272,4.272,0,0,1-.159.61l-.127.375-.344-.237a8.713,8.713,0,0,0-2.628-1.274l-.245-.074.025-.237a1.438,1.438,0,0,0-.272-.968,1.629,1.629,0,0,0-1.725-.622,1.484,1.484,0,0,0-.411.176l-6.722,4.14a1.353,1.353,0,0,0-.631.908,1.394,1.394,0,0,0,.244,1.092,1.634,1.634,0,0,0,1.726.621,1.538,1.538,0,0,0,.413-.175l2.562-1.585a4.9,4.9,0,0,1,1.364-.581,5.417,5.417,0,0,1,5.728,2.059,4.681,4.681,0,0,1,.843,3.625A4.5,4.5,0,0,1,22.1,21.905l-6.707,4.154a4.9,4.9,0,0,1-1.364.581"
            style="fill:#fff"></path>
    </g>
</svg>`,
		setup: `npm install tradux`,
		usage: `
<script>
  import { t, setLanguage, getAvailableLanguages, getCurrentLanguage } 
  from "tradux"

  let currentLanguage = "";

  async function init() {
    currentLanguage = await getCurrentLanguage();
  }
  init();

  async function changeLanguage(event) {
    const lang = event.target.value;
    if (await setLanguage(lang)) {
      currentLanguage = lang;
      location.reload();
    }
  }
</script>

<div>
  <h1>Svelte</h1>
  <h2>{t.welcome}</h2>
  <p>{t.navigation.home}</p>
  <p>{t.navigation.about}</p>
  <p>{t.navigation.services}</p>
  <select bind:value={currentLanguage} on:change={changeLanguage}>
    {#each getAvailableLanguages() as { name, value }}
      <option {value}>{name}</option>
    {/each}
  </select>
</div>
`
	},
	{
		name: 'Astro',
		color: '#691cb8',
		icon: `<svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24" fill="none" stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-brand-astro"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M14.972 3.483c.163 .196 .247 .46 .413 .987l3.64 11.53a15.5 15.5 0 0 0 -4.352 -1.42l-2.37 -7.723a.31 .31 0 0 0 -.296 -.213a.31 .31 0 0 0 -.295 .214l-2.342 7.718a15.5 15.5 0 0 0 -4.37 1.422l3.657 -11.53c.168 -.527 .251 -.79 .415 -.986c.144 -.172 .331 -.306 .544 -.388c.242 -.094 .527 -.094 1.099 -.094h2.612c.572 0 .858 0 1.1 .094c.213 .082 .4 .217 .545 .39" /><path d="M9 18c0 1.5 2 3 3 4c1 -1 3 -3 3 -4q -3 1.5 -6 0" /></svg>`,
		setup: `npm install tradux`,
		usage: `
---
import { t, getCurrentLanguage, getAvailableLanguages } 
from "tradux";

const traduxCookie = Astro.cookies.get("tradux_lang")?.value;
const currentLang = await getCurrentLanguage(traduxCookie);
---

<section>
    <h1>Astro</h1>

    <h2>{t.welcome}</h2>

    <p>{t.navigation.home}</p>
    <p>{t.navigation.about}</p>
    <p>{t.navigation.services}</p>

    <select id="lang-select">
        {
            getAvailableLanguages().map((lang) => (
                <option
                    value={lang.value}
                    selected={lang.value === currentLang}
                >
                    {lang.name}
                </option>
            ))
        }
    </select>
</section>

<script>
    import { setLanguage } from "tradux";

    const langSelect = document.getElementById("lang-select") as HTMLElement;

    langSelect.addEventListener("change", async (e: Event) => {
        await setLanguage((e.target as HTMLSelectElement).value);
        location.reload();
    });
</script>
    `
	},
	{
		name: 'Node',
		color: '#539e43',
		icon: `<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 width="100%" viewBox="0 0 204 192" enable-background="new 0 0 204 192" xml:space="preserve">
<path fill="none" opacity="1.000000" stroke="none" 
	d="
M88.000000,193.000000 
	C59.034790,193.000000 30.069576,193.000000 1.052183,193.000000 
	C1.052183,129.111603 1.052183,65.223145 1.052183,1.000000 
	C29.353350,1.000000 57.708015,1.000000 86.348938,1.288323 
	C65.356339,13.942529 44.103683,26.353876 22.779203,38.640560 
	C17.792152,41.513992 13.860188,44.980183 13.033028,51.508339 
	C12.923136,67.463493 12.858303,82.960770 12.893977,98.457825 
	C12.928101,113.280899 13.066729,128.103729 13.125584,143.293671 
	C14.371387,149.042130 17.712931,152.644943 22.553251,155.185608 
	C27.401016,157.730179 32.080551,160.594315 36.845436,163.297928 
	C43.230148,166.920654 49.654999,169.505249 57.443195,169.235275 
	C70.166748,168.794235 76.038033,164.627914 78.954636,151.645828 
	C79.007568,150.887665 78.983971,150.450455 79.068855,149.554169 
	C79.226608,132.501022 79.327118,115.906883 79.308540,99.312881 
	C79.294250,86.544922 79.130165,73.777122 79.062714,60.752293 
	C79.004875,60.346916 78.917015,60.198502 78.646729,59.667614 
	C76.658005,59.123901 74.852715,58.837719 73.045242,58.823204 
	C65.476234,58.762402 65.474052,58.792236 65.473785,66.477867 
	C65.472900,92.129227 65.485870,117.780594 65.467850,143.431946 
	C65.459999,154.601868 57.791710,159.265793 47.765511,153.995438 
	C41.292728,150.593002 34.963661,146.883514 28.799574,142.951981 
	C27.322104,142.009628 25.909681,139.640640 25.900026,137.919724 
	C25.747711,110.770775 25.878746,83.620346 25.793545,56.470726 
	C25.783319,53.212078 26.912182,51.407093 29.724794,49.795273 
	C53.112000,36.392799 76.378708,22.779690 99.804672,9.446034 
	C101.391777,8.542675 104.413551,8.618451 106.028809,9.537775 
	C129.306900,22.786560 152.422318,36.320961 175.681686,49.603081 
	C178.864624,51.420670 179.909805,53.476845 179.888916,57.077377 
	C179.736069,83.394119 179.709656,109.712891 179.908371,136.029022 
	C179.939102,140.098190 178.594589,142.268494 175.136276,144.250946 
	C150.777390,158.214569 126.536316,172.383698 102.602043,186.287125 
	C96.023666,182.269730 89.621574,178.312073 83.149315,174.472687 
	C82.404778,174.031036 81.110855,173.885727 80.341331,174.221359 
	C76.285515,175.990265 72.316231,177.957611 67.703659,180.147232 
	C74.727432,184.595078 81.363716,188.797546 88.000000,193.000000 
M137.420609,57.440269 
	C129.932571,57.252277 122.444542,57.064289 114.129807,56.841354 
	C108.991966,58.618591 103.400635,59.630722 98.818985,62.346336 
	C91.312431,66.795586 88.423935,74.219788 89.266724,82.885071 
	C90.101852,91.471657 95.061623,96.970978 103.118446,99.337761 
	C108.814697,101.011086 114.739044,101.940269 120.592010,103.039581 
	C127.931808,104.418144 135.403473,105.246498 142.603165,107.133018 
	C144.981384,107.756172 148.213272,110.830910 148.344086,112.951904 
	C148.529419,115.956764 146.673843,119.456169 144.776718,122.084686 
	C143.609528,123.701874 140.774750,124.794601 138.626709,124.903885 
	C130.535797,125.315498 122.391747,125.683578 114.320747,125.193192 
	C106.807999,124.736732 102.048569,120.463264 100.677277,112.634415 
	C100.448364,111.327515 98.291077,109.879570 96.746223,109.406242 
	C94.919243,108.846481 92.788460,109.321388 90.791916,109.262123 
	C87.623009,109.168037 86.360741,110.430084 86.605995,113.789307 
	C87.326416,123.657028 91.867859,131.184631 100.945229,134.863937 
	C116.325836,141.098099 132.120209,140.930023 147.830109,135.718185 
	C149.846909,135.049088 151.746536,133.856506 153.514481,132.636841 
	C161.692154,126.995262 164.086456,118.867760 163.002808,109.457878 
	C162.012482,100.858284 156.236694,96.490891 148.607239,94.029755 
	C145.935287,93.167839 143.190964,92.451958 140.427505,91.966187 
	C130.609589,90.240326 120.748482,88.754036 110.948357,86.936378 
	C107.451500,86.287811 104.150154,84.944946 103.892197,80.442841 
	C103.636551,75.981049 105.751534,72.468735 109.748589,71.665840 
	C116.163673,70.377205 122.808823,69.816528 129.364975,69.749245 
	C138.328720,69.657272 144.476364,74.014145 146.896957,83.640976 
	C147.207092,83.917839 147.517242,84.194695 148.595276,84.792595 
	C150.920197,84.816895 153.257523,84.698051 155.567245,84.897995 
	C159.330261,85.223732 160.560501,83.793304 160.120712,79.974869 
	C158.759872,68.158981 150.578476,59.815201 137.420609,57.440269 
z"/>
<path fill="currentColor" opacity="1.000000" stroke="none" 
	d="
M78.878113,151.966766 
	C76.038033,164.627914 70.166748,168.794235 57.443195,169.235275 
	C49.654999,169.505249 43.230148,166.920654 36.845436,163.297928 
	C32.080551,160.594315 27.401016,157.730179 22.553251,155.185608 
	C17.712931,152.644943 14.371387,149.042130 13.393469,142.984543 
	C13.797367,141.658829 13.988545,141.009323 13.988907,140.359711 
	C14.004792,111.828766 14.014892,83.297806 13.967484,54.766937 
	C13.965425,53.527618 13.416307,52.289207 13.122023,51.050373 
	C13.860188,44.980183 17.792152,41.513992 22.779203,38.640560 
	C44.103683,26.353876 65.356339,13.942529 86.817596,1.288323 
	C97.354225,1.000000 107.708458,1.000000 118.714813,1.287771 
	C124.814148,4.976579 130.161713,8.551186 135.727356,11.745933 
	C152.083313,21.134480 168.543564,30.341141 184.923386,39.688423 
	C189.657913,42.390228 192.639801,46.372261 192.625458,52.322487 
	C192.218445,53.427700 192.010376,54.241539 192.009888,55.055500 
	C191.992874,83.098198 191.984772,111.140915 192.030701,139.183548 
	C192.032745,140.433029 192.552032,141.681641 192.861023,143.297119 
	C191.625320,148.827408 188.501434,152.405777 183.855621,154.965302 
	C176.577698,158.974930 169.405472,163.180069 162.244308,167.397217 
	C147.809647,175.897705 133.412582,184.462006 119.000000,193.000000 
	C108.979103,193.000000 98.958214,193.000000 88.468658,193.000000 
	C81.363716,188.797546 74.727432,184.595078 67.703659,180.147232 
	C72.316231,177.957611 76.285515,175.990265 80.341331,174.221359 
	C81.110855,173.885727 82.404778,174.031036 83.149315,174.472687 
	C89.621574,178.312073 96.023666,182.269730 102.602043,186.287125 
	C126.536316,172.383698 150.777390,158.214569 175.136276,144.250946 
	C178.594589,142.268494 179.939102,140.098190 179.908371,136.029022 
	C179.709656,109.712891 179.736069,83.394119 179.888916,57.077377 
	C179.909805,53.476845 178.864624,51.420670 175.681686,49.603081 
	C152.422318,36.320961 129.306900,22.786560 106.028809,9.537775 
	C104.413551,8.618451 101.391777,8.542675 99.804672,9.446034 
	C76.378708,22.779690 53.112000,36.392799 29.724794,49.795273 
	C26.912182,51.407093 25.783319,53.212078 25.793545,56.470726 
	C25.878746,83.620346 25.747711,110.770775 25.900026,137.919724 
	C25.909681,139.640640 27.322104,142.009628 28.799574,142.951981 
	C34.963661,146.883514 41.292728,150.593002 47.765511,153.995438 
	C57.791710,159.265793 65.459999,154.601868 65.467850,143.431946 
	C65.485870,117.780594 65.472900,92.129227 65.473785,66.477867 
	C65.474052,58.792236 65.476234,58.762402 73.045242,58.823204 
	C74.852715,58.837719 76.658005,59.123901 78.505905,59.779289 
	C78.709244,60.518711 78.870964,60.763985 79.032684,61.009254 
	C79.130165,73.777122 79.294250,86.544922 79.308540,99.312881 
	C79.327118,115.906883 79.226608,132.501022 78.839546,149.683319 
	C78.627205,150.836594 78.752655,151.401688 78.878113,151.966766 
M24.576561,53.518166 
	C24.576561,53.518166 24.467239,53.585506 24.576561,53.518166 
z"/>
<path fill="none" opacity="1.000000" stroke="none" 
	d="
M119.468658,193.000000 
	C133.412582,184.462006 147.809647,175.897705 162.244308,167.397217 
	C169.405472,163.180069 176.577698,158.974930 183.855621,154.965302 
	C188.501434,152.405777 191.625320,148.827408 192.958466,142.841980 
	C192.990585,112.023987 192.955887,82.027580 192.921173,52.031166 
	C192.639801,46.372261 189.657913,42.390228 184.923386,39.688423 
	C168.543564,30.341141 152.083313,21.134480 135.727356,11.745933 
	C130.161713,8.551186 124.814148,4.976579 119.183472,1.287771 
	C147.632172,1.000000 176.264343,1.000000 204.948257,1.000000 
	C204.948257,64.888466 204.948257,128.776978 204.948257,193.000000 
	C176.646652,193.000000 148.291977,193.000000 119.468658,193.000000 
z"/>
<path fill="currentColor" opacity="1.000000" stroke="none" 
	d="
M146.847122,82.991440 
	C144.476364,74.014145 138.328720,69.657272 129.364975,69.749245 
	C122.808823,69.816528 116.163673,70.377205 109.748589,71.665840 
	C105.751534,72.468735 103.636551,75.981049 103.892197,80.442841 
	C104.150154,84.944946 107.451500,86.287811 110.948357,86.936378 
	C120.748482,88.754036 130.609589,90.240326 140.427505,91.966187 
	C143.190964,92.451958 145.935287,93.167839 148.607239,94.029755 
	C156.236694,96.490891 162.012482,100.858284 163.002808,109.457878 
	C164.086456,118.867760 161.692154,126.995262 153.514481,132.636841 
	C151.746536,133.856506 149.846909,135.049088 147.830109,135.718185 
	C132.120209,140.930023 116.325836,141.098099 100.945229,134.863937 
	C91.867859,131.184631 87.326416,123.657028 86.605995,113.789307 
	C86.360741,110.430084 87.623009,109.168037 90.791916,109.262123 
	C92.788460,109.321388 94.919243,108.846481 96.746223,109.406242 
	C98.291077,109.879570 100.448364,111.327515 100.677277,112.634415 
	C102.048569,120.463264 106.807999,124.736732 114.320747,125.193192 
	C122.391747,125.683578 130.535797,125.315498 138.626709,124.903885 
	C140.774750,124.794601 143.609528,123.701874 144.776718,122.084686 
	C146.673843,119.456169 148.529419,115.956764 148.344086,112.951904 
	C148.213272,110.830910 144.981384,107.756172 142.603165,107.133018 
	C135.403473,105.246498 127.931808,104.418144 120.592010,103.039581 
	C114.739044,101.940269 108.814697,101.011086 103.118446,99.337761 
	C95.061623,96.970978 90.101852,91.471657 89.266724,82.885071 
	C88.423935,74.219788 91.312431,66.795586 98.818985,62.346336 
	C103.400635,59.630722 108.991966,58.618591 114.833725,57.164692 
	C120.457756,57.631935 125.377220,57.807243 130.298218,57.906910 
	C132.879059,57.959179 135.462570,57.878834 138.044876,57.858372 
	C150.578476,59.815201 158.759872,68.158981 160.120712,79.974869 
	C160.560501,83.793304 159.330261,85.223732 155.567245,84.897995 
	C153.257523,84.698051 150.920197,84.816895 148.157272,84.323463 
	C147.428558,83.566704 147.137833,83.279076 146.847122,82.991440 
z"/>
<path fill="#36921C" opacity="1.000000" stroke="none" 
	d="
M13.033028,51.508339 
	C13.416307,52.289207 13.965425,53.527618 13.967484,54.766937 
	C14.014892,83.297806 14.004792,111.828766 13.988907,140.359711 
	C13.988545,141.009323 13.797367,141.658829 13.427310,142.617523 
	C13.066729,128.103729 12.928101,113.280899 12.893977,98.457825 
	C12.858303,82.960770 12.923136,67.463493 13.033028,51.508339 
z"/>
<path fill="#66A857" opacity="1.000000" stroke="none" 
	d="
M137.732742,57.649323 
	C135.462570,57.878834 132.879059,57.959179 130.298218,57.906910 
	C125.377220,57.807243 120.457756,57.631935 115.247086,57.182167 
	C122.444542,57.064289 129.932571,57.252277 137.732742,57.649323 
z"/>
<path fill="#41972C" opacity="1.000000" stroke="none" 
	d="
M78.954636,151.645828 
	C78.752655,151.401688 78.627205,150.836594 78.731056,150.142365 
	C78.983971,150.450455 79.007568,150.887665 78.954636,151.645828 
z"/>
<path fill="#41972C" opacity="1.000000" stroke="none" 
	d="
M79.062714,60.752293 
	C78.870964,60.763985 78.709244,60.518711 78.688339,60.161766 
	C78.917015,60.198502 79.004875,60.346916 79.062714,60.752293 
z"/>
<path fill="#62A653" opacity="1.000000" stroke="none" 
	d="
M146.872040,83.316208 
	C147.137833,83.279076 147.428558,83.566704 147.773315,84.162949 
	C147.517242,84.194695 147.207092,83.917839 146.872040,83.316208 
z"/>
<path fill="#36921C" opacity="1.000000" stroke="none" 
	d="
M192.625458,52.322487 
	C192.955887,82.027580 192.990585,112.023987 192.927856,142.475525 
	C192.552032,141.681641 192.032745,140.433029 192.030701,139.183548 
	C191.984772,111.140915 191.992874,83.098198 192.009888,55.055500 
	C192.010376,54.241539 192.218445,53.427700 192.625458,52.322487 
z"/>
<path fill="#499A37" opacity="1.000000" stroke="none" 
	d="
M24.521900,53.551834 
	C24.467239,53.585506 24.576561,53.518166 24.521900,53.551834 
z"/>
</svg>`,
		setup: `npm install tradux`,
		usage: `
import express from "express";
import { t, getCurrentLanguage } from "tradux";
import fs from "fs/promises";
import path from "path";

const app = express();

app.get("/", async (req, res) => {
    const traduxLang = req.headers.cookie?.split("; ").find(c => c.startsWith("tradux_lang="))?.split("=")[1] || "en";
    const lang = await getCurrentLanguage(traduxLang);

    let html = await fs.readFile(path.resolve("index.html"), "utf-8");

    const title = t.title_meta;
    const description = t.description_meta;
    const keywords = t.keywords_meta;

    html = html
        .replace(/<html lang=".*?">/, \`<html lang="\${lang}">\`)
        .replace(/<title>.*?<\\/title>/, \`<title>\${title}</title>\`)
        .replace(/<meta name="description" content=".*?">/, 
        \`<meta name="description" content="\${description}">\`)
        .replace(/<meta name="keywords" content=".*?">/, 
        \`<meta name="keywords" content="\${keywords}">\`);

    res.send(html);
});

app.listen(3000, () => {
    console.log("Server running at http://localhost:3000");
});
`
	},
]